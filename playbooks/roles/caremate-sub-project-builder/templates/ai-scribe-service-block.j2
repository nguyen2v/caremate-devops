  chroma-server:
    container_name: chroma-server
    image: chromadb/chroma:latest
    environment:
      - IS_PERSISTENT=true
      - PERSIST_DIRECTORY=/chroma/chroma
      - CHROMA_SERVER_AUTH_PROVIDER=chromadb.auth.token.TokenAuthServerProvider
      - CHROMA_SERVER_AUTH_CREDENTIALS=${CHROMA_API_KEY}
      - CHROMA_SERVER_AUTH_TOKEN_TRANSPORT_HEADER=Authorization
    ports:
      - 8001:8000
    volumes:
      - chroma-data:/chroma/chroma
    networks:
      - caremate-network
    restart: unless-stopped

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - 17474:7474
      - 17687:7687
    volumes:
      - ./data:/data
      - ./plugins:/plugins
    environment:
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    networks:
      - caremate-network
    restart: unless-stopped

  {{ sub_project_name }}:
    image: {{ sub_project_name }}:latest
    build: ./caremate-assistant/{{ sub_project_name }}
    container_name: {{ sub_project_name }}
    command: >
      poetry run uvicorn app.main:app
      --app-dir app
      --host ${UVICORN_HOST}
      --port ${UVICORN_PORT}
    environment:
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - CHROMA_HTTP_HOST=chroma-server
      - CHROMA_HTTP_PORT=8000
      - CHROMA_API_KEY=${CHROMA_API_KEY}
      - CHROMA_TENANT=${CHROMA_TENANT}
      - CHROMA_DATABASE=${CHROMA_DATABASE}
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_DATABASE=neo4j
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    ports:
      - 8000:8000
    depends_on:
      - chroma-server
      - neo4j
    networks:
      - caremate-network
    restart: unless-stopped
